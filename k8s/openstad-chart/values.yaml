
# Define anchors

define:
  namespace: &namespace openstad
  frontendService:
    name: &fesName "frontend-service"
    path: &fesPath /
    containerPort: &fesContainerPort 4444
  authService:
    name: &asName "auth-service"
    path: &asPath /oauth
    containerPort: &asContainerPort 4000
  apiService:
    name: &apiName "api-service"
    path: &apiPath /api
    containerPort: &apiContainerPort 8111
  imageService:
    name: &imgName "image-service"
    path: &imgPath /img
    containerPort: &imgContainerPort 4100
  admService:
    name: &admName "adminer-service"
    path: &admPath /adminer
    containerPort: &admContainerPort 80
  host:
    host-url: &host-url www.openstad.softwaredepartment.net
    host-http: &host-http http://www.openstad.softwaredepartment.net
    host-https: &host-https https://www.openstad.softwaredepartment.net

  mysql:
    username: &dbUser openstad
    password: &dbPass examplePass2146
    database: &dbName image

  mongodb:
    database: &mgdbDb openstad_mongodb

# Dependencies

dependencies:
  mongodb: 
    enabled: true
  mysql: 
    enabled: true
  cert-manager: 
    enabled: false

# Secrets

secrets:
  namespace: *namespace

  database: # SQL database
    image:
      secretName: openstad-image-db # Originally: openstad-image-db
    
    api:
      secretName: openstad-api-db # Originally: openstad-api-db

    auth:
      secretName: openstad-auth-db # Originally: openstad-auth-db

      credentials:
        secretName: openstad-auth-credentials # Originally: openstad-auth-credentials

    secretName: openstad-db-credentials # Originally: openstad-db-credentials
    password: *dbPass
    username: *dbUser

  mongodb: # Mongo Database
    secretName: openstad-mongo-credentials # Originally: openstad-mongo-credentials
    database: *mgdbDb

  cookies:
    secretName: openstad-cookies # Originally: openstad-cookies

  hosts:
    secretName: openstad-hosts # Originally: openstad-hosts-test

  mail:
    api:
      secretName: openstad-api-mail # Originally: openstad-api-mail

    auth:
      secretName: openstad-auth-mail # Originally: openstad-auth-mail
  

# Generic

host:
  www: *host-url
  http: *host-http
  https: *host-https

# Persistence
persistence:
  storageClassName: "hcloud-volumes"
  annotations: "{}"

# Ingress

ingress:
  namespace: *namespace

  admService:
    ingName: "openstad-ingress-adminer"
    name: *admName
    path: *admPath
    containerPort: *admContainerPort

  frontendService:
    ingName: "openstad-ingress-frontend"
    name: *fesName
    path: *fesPath
    containerPort: *fesContainerPort

  authService:
    ingName: "openstad-ingress-auth"
    name: *asName
    path: *asPath
    containerPort: *asContainerPort
  
  apiService:
    ingName: "openstad-ingress-api"
    name: *apiName
    path: *apiPath
    containerPort: *apiContainerPort
  
  imageService:
    ingName: "openstad-ingress-image"
    name: *imgName
    path: *imgPath
    containerPort: *imgContainerPort

# Frontend

frontend:
    replicas: 1 # Originally: 1
    namespace: *namespace # Originally: openstad

    deploymentContainer:
        name: frontend-container # Originally: frontend
        image: openstad/frontend:debug # Originally: openstad/frontend:debug
        port: *fesContainerPort # Originally: 4444

    host:
        path: *fesPath

    deployment:
        name: "frontend-deploy" # Originally: frontend

    service:
        name: *fesName # Originally: frontend-service
        httpPort: *fesContainerPort
        managementPort: 9090
    
    probe:
      liveness:
        initialDelaySeconds: 30
        periodSeconds: 60

# Adminer

adminer:
  replicas: 1 # Originally: 1

  namespace: *namespace
  service:
    name: *admName
  deployment:
    name: adminer-deploy
  
  label: adminer-web

  deploymentContainer:
    name: auth
    image: adminer
    port: *admContainerPort

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

# Auth

auth:
  replicas: 1 # Originally: 1

  namespace: *namespace
  service:
    name: *asName
  deployment:
    name: auth-deploy
  
  label: auth-container

  host:
    path: *asPath

  deploymentContainer:
    name: auth-container
    image: openstad/auth:test
    port: *asContainerPort
  
  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

# API

api:
  replicas: 1 # Originally: 1
  
  namespace: *namespace
  service:
    name: *apiName
  deployment:
    name: api-deploy
  
  label: openstad-api

  deploymentContainer:
    name: api-container
    image: openstad/api:test
    port: *apiContainerPort

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

# Image

image:
  replicas: 1 # Originally: 1
  
  namespace: *namespace
  service:
    name: *imgName
  deployment:
    name: image-deploy
  
  label: image-container

  deploymentContainer:
    name: image
    image: openstad/image:test
    port: *imgContainerPort

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

# MongoDB overwrite subchart

mongodb:
  mongodbUsername: *dbUser
  mongodbPassword: *dbPass
  mongodbDatabase: *mgdbDb

# MySQL overwrite subchart

mysql:
  db:
    user: *dbUser
    password: *dbPass
    name: *dbName

# TLS

tls:
    host: *host-url
    secretName: openstad-tls