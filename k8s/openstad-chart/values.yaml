
# TODO

# Tests to see whether everything works as it should
# Check whether the given values can be changed without breaking anything
# Add PVC (Persistent Volume Claims)
# Create MySQL/MongoDB databases if there is none already
# Add initContainers for databases

# Define anchors

define:
  namespace: &namespace openstad
  frontendService:
    name: &fesName "frontend-service"
    path: &fesPath /
    containerPort: &fesContainerPort 4444
  authService:
    name: &asName "auth-service"
    path: &asPath /oauth
    containerPort: &asContainerPort 4000
  host:
    host-url: &host-url www.openstad.softwaredepartment.net
    host-http: &host-http http://www.openstad.softwaredepartment.net
    host-https: &host-https https://www.openstad.softwaredepartment.net

# Generic

host:
  www: *host-url
  http: *host-http
  https: *host-https

# Ingress

ingress:
  namespace: *namespace
  name: "openstad-ingress" # Originally: openstad-ingress 

  frontendService:
    name: *fesName
    path: *fesPath
    containerPort: *fesContainerPort

  authService:
    name: *asName
    path: *asPath
    containerPort: *asContainerPort

# Frontend

frontend:
    replicas: 1 # Originally: 1
    namespace: *namespace # Originally: openstad

    deploymentContainer:
        name: frontend-container # Originally: frontend
        image: openstad/frontend:debug # Originally: openstad/frontend:debug
        port: *fesContainerPort # Originally: 4444

    host:
        path: *fesPath

    deployment:
        name: "frontend-deploy" # Originally: frontend

    service:
        name: frontend-service # Originally: frontend-service
        httpPort: *fesContainerPort
        managementPort: 9090

# Adminer

adminer:
  replicas: 1 # Originally: 1

  namespace: *namespace
  service:
    name: adminer-service
  deployment:
    name: adminer-deploy
  
  label: adminer-web

  deploymentContainer:
    name: auth
    image: adminer
    port: 8080

# Auth

auth:
  replicas: 1 # Originally: 1

  namespace: *namespace
  service:
    name: auth-service
  deployment:
    name: auth-deploy
  
  label: auth-container

  host:
    path: *asPath

  deploymentContainer:
    name: auth-container
    image: openstad/auth:test
    port: 4000

# API

api:
  replicas: 1 # Originally: 1
  
  namespace: *namespace
  service:
    name: api-service
  deployment:
    name: api-deploy
  
  label: openstad-api

  deploymentContainer:
    name: api-container
    image: openstad/api:test
    port: 8111

# Image

image:
  replicas: 1 # Originally: 1
  
  namespace: *namespace
  service:
    name: image-service
  deployment:
    name: image-deploy
  
  label: image-container

  host:
    path: /

  deploymentContainer:
    name: image
    image: openstad/image:test
    port: 3000

# TLS

tls:
    host: *host-url
    secretName: openstad-tls