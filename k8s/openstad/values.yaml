
# TODO:
## Add documentation
## Naming: Release.Name-resource-chart.name
## Standard Helm annotations

# Optional Dependencies

##
## In this block you can toggle all optional dependencies.
## If you want to use an existing database(s) or services, disable
## the chart database(s) here.
##
## - To enable a depency, set the enabled value of the relevant
##   depency to true.
##
## - To disable a depency, set the enabled value of the relevant
##   depency to false.
##

dependencies:
  ## Database
  mongodb: 
    enabled: true
  mysql: 
    enabled: true

  ## SSL
  cert-manager: 
    enabled: false

# Settings

##
## All base settings can be changed in this block.
##

## Settings for MongoDB
mongodb:
  usePassword: false

## Settings for MySQL
mysql:
  image: # Docker Image
    tag: 5.7.30 # Docker Tag: 5.7.30 for compatibility
  db:
    user: openstad
    password: examplePass2146
    name: image
    additionalDbNames:
      - api
      - auth
  initdbScriptsConfigMap: extra-db-map

## Settings for DNS
host:
  base: openstad.softwaredepartment.net
  www: www.openstad.softwaredepartment.net
  http: http://www.openstad.softwaredepartment.net
  https: https://www.openstad.softwaredepartment.net

## Settings for persistent volumes

persistence:
  storageClassName: "hcloud-volumes"
  annotations: "{}"

## Settings for the Frontend

frontend:
    replicas: 1

    name: "frontend"

    deploymentContainer:
        name: frontend-container # Originally: frontend
        image: openstad/frontend:debug # Originally: openstad/frontend:debug

    service:
        httpPort: 4444
        managementPort: 9090
    
    ingress:
      enabled: true
      annotations: 
        cert-manager.io/cluster-issuer: letsencrypt-staging
        kubernetes.io/ingress.class: nginx
      extraLabels: {}
      hosts:
      - www.openstad.softwaredepartment.net
      tls:
      - secretName: openstad-tls-frontend
        hosts:
        - www.openstad.softwaredepartment.net

    probe:
      liveness:
        initialDelaySeconds: 30
        periodSeconds: 60

    volumes:
      data:
        size:
          1Gi
      uploads:
        size:
          1Gi

## Settings for Adminer

adminer:
  replicas: 1

  name: "adminer"

  service:
    httpPort: 8080

  ingress:
    enabled: false
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-staging
      kubernetes.io/ingress.class: nginx
    extraLabels: {}
    hosts:
    - www.openstad.softwaredepartment.net
    tls:
    - secretName: openstad-tls-adminer
      hosts:
      - www.openstad.softwaredepartment.net
  
  label: adminer-web

  deploymentContainer:
    name: auth
    image: adminer

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

## Settings for the Auth server

auth:
  replicas: 1

  name: "auth"

  service:
    httpPort: 4000
  
  label: auth-container

  ingress:
    enabled: true
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-staging
      kubernetes.io/ingress.class: nginx
    extraLabels: {}
    hosts:
    - www.auth.openstad.softwaredepartment.net
    tls:
    - secretName: openstad-tls-auth
      hosts:
      - www.auth.openstad.softwaredepartment.net

  deploymentContainer:
    name: auth-container
    image: openstad/auth:test
  
  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60


## Settings for the API server

api:
  replicas: 1

  name: "api"
  
  service:
    httpPort: 8111
  
  label: openstad-api

  ingress:
    enabled: true
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-staging
      kubernetes.io/ingress.class: nginx
    extraLabels: {}
    hosts:
    - www.api.openstad.softwaredepartment.net
    tls:
    - secretName: openstad-tls-api
      hosts:
      - www.api.openstad.softwaredepartment.net

  deploymentContainer:
    name: api-container
    image: openstad/api:test

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

## Settings for the Image server

image:
  replicas: 1

  name: "image"
  
  service:
    httpPort: 4100
  
  label: image-container

  ingress:
    enabled: true
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-staging
      kubernetes.io/ingress.class: nginx
    extraLabels: {}
    hosts:
      - www.img.openstad.softwaredepartment.net
    tls:
      - secretName: openstad-tls-image
        hosts:
          - www.img.openstad.softwaredepartment.net

  deploymentContainer:
    name: image
    image: openstad/image:test

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

  volumes:
    data:
      size:
        1Gi

# Overwrite Secrets

##
## In this block you can choose to overwrite
## the default values of the secrets.
##

secrets:
  database: # SQL database
    secretName:
    image:
      dbName: image
      secretName:
    auth:
      dbName: auth
      secretName:
      credentials:
        secretName:
    api:
      dbName: api
      secretName:
    frontend:
      secretName:
    adminer:
      secretName:

    password: examplePass2146 # Remove
    username: openstad # Remove

  hosts:
    secretName:

  cookies:
    secretName:

  mail:
    auth:
      secretName:
    api:
      secretName:

  mongodb: # Mongo Database
    secretName:
    database: openstad_mongodb # Remove
