
# TODO:
## Add documentation
## Naming: Release.Name-resource-chart.name
## Standard Helm annotations

# Dependencies

##
## In this block you can toggle all optional dependencies.
## If you want to use an existing database(s) or services, disable
## the chart database(s) here.
##
## - To enable a depency, set the enabled value of the relevant
##   depency to true.
##
## - To disable a depency, set the enabled value of the relevant
##   depency to false.
##

dependencies:
  ## Database
  mongodb: 
    enabled: true
  mysql: 
    enabled: true

  ## SSL
  cert-manager: 
    enabled: false

# SSL
define:
  certManager:
    ## You can switch the issuer here
    ## For development use: letsencrypt-staging
    ## For production use: letsencrypt-prod
    ## The latter issues a working certificate
    ## The former can be issued multiple times a day
    clusterIssuer: letsencrypt-staging

# Persistence

persistence:
  storageClassName: "hcloud-volumes"
  annotations: "{}"

# Frontend

frontend:
    replicas: 1

    deploymentContainer:
        name: frontend-container # Originally: frontend
        image: openstad/frontend:debug # Originally: openstad/frontend:debug
        port: 4444 # Originally: 4444

    host:
        path: /
        subdomain: 

    deployment:
        name: "frontend-deploy" # Originally: frontend

    service:
        name: "frontend-service" # Originally: frontend-service
        httpPort: 4444
        managementPort: 9090
    
    probe:
      liveness:
        initialDelaySeconds: 30
        periodSeconds: 60

    volumes:
      data:
        size:
          1Gi
      uploads:
        size:
          1Gi

# Adminer

adminer:
  replicas: 1

  service:
    name: "adminer-service"
  deployment:
    name: "adminer-deploy"
  
  label: adminer-web

  deploymentContainer:
    name: auth
    image: adminer
    port: 8080

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

# Auth

auth:
  replicas: 1

  service:
    name: "auth-service"
  deployment:
    name: "auth-deploy"
  
  label: auth-container

  host:
    path: /
    subdomain: auth

  deploymentContainer:
    name: auth-container
    image: openstad/auth:test
    port: 4000
  
  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60


# API

api:
  replicas: 1
  
  service:
    name: "api-service"
  deployment:
    name: "api-deploy"
  
  label: openstad-api

  host:
    path: /
    subdomain: api

  deploymentContainer:
    name: api-container
    image: openstad/api:test
    port: 8111

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

# Image

image:
  replicas: 1
  
  service:
    name: "image-service"
  deployment:
    name: "image-deploy"
  
  label: image-container

  host:
    path: /
    subdomain: img

  deploymentContainer:
    name: image
    image: openstad/image:test
    port: 4100

  probe:
    liveness:
      initialDelaySeconds: 30
      periodSeconds: 60

  volumes:
    data:
      size:
        1Gi


# Automatically configured sections

## Generic

host:
  base: openstad.softwaredepartment.net
  www: www.openstad.softwaredepartment.net
  http: http://www.openstad.softwaredepartment.net
  https: https://www.openstad.softwaredepartment.net

## Secrets

secrets:
  database: # SQL database
    secretName:
    image:
      dbName: image
      secretName:
    auth:
      dbName: auth
      secretName:
      credentials:
        secretName:
    api:
      dbName: api
      secretName:
    frontend:
      secretName:
    adminer:
      secretName:

    password: examplePass2146
    username: openstad

  hosts:
    secretName:

  cookies:
    secretName:

  mail:
    auth:
      secretName:
    api:
      secretName:

  mongodb: # Mongo Database
    secretName:
    database: openstad_mongodb

 
## TLS

tls:
  host: www.openstad.softwaredepartment.net

## Ingress

ingress:
  adminerService:
    ingName: "openstad-ingress-adminer"
    name: "adminer-service"
    path: /
    containerPort: 8080
    subdomain: 

  frontendService:
    ingName: "openstad-ingress-frontend"
    name: "frontend-service"
    path: /
    containerPort: 4444
    subdomain: 

  authService:
    ingName: "openstad-ingress-auth"
    name: "auth-service"
    path: /
    containerPort: 4000
    subdomain: auth
  
  apiService:
    ingName: "openstad-ingress-api"
    name: "api-service"
    path: /
    containerPort: 8111
    subdomain: api
  
  imageService:
    ingName: "openstad-ingress-image"
    name: "image-service"
    path: /
    containerPort: 4100
    subdomain: img

## Subcharts

### MongoDB overwrite subchart

mongodb:
  usePassword: false

### MySQL overwrite subchart

mysql:
  image:
    tag: 5.7.30
  db:
    user: openstad
    password: examplePass2146
    name: image
  initdbScriptsConfigMap: extra-db-map


#Extra database just for test

extras:
  dbNames:
    - api
    - auth
