{{- if .Values.api.resetApiDatabaseOnInstall }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-post-install-hook"
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "openstad.labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-reset-database
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
        - name: post-install-job-reset-database
          image: {{ .Values.api.deploymentContainer.image }}
          imagePullPolicy: Always
          command: ["node","reset.js"]
          env:
            - name: API_URL
              value: https://{{ template "openstad.api.url" . }}

            - name: API_HOSTNAME
              value: www.{{ .Values.host.base}}

            - name: FRONTEND_URL
              value: https://www.{{ .Values.host.base }}

            - name: ADMIN_URL
              value: https://{{ template "openstad.admin.url" . }}

            - name: IGNORE_BRUTE_FORCE_IP
              value: {{ .Values.host.publicIp }}

            - name: AUTH_ADMIN_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: admin_client_id
                  name: openstad-auth-credentials

            - name: AUTH_ADMIN_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: admin_client_secret
                  name: openstad-auth-credentials

            - name: PUBLIC_IP
              value: {{ .Values.host.publicIp }}

            - name: S3_DBS_TO_BACKUP
              value: "{{ .Values.S3.dbsToBackup }}"

            - name: S3_MONGO_BACKUPS
              value: "{{ .Values.S3.mongoBackups }}"

            - name: S3_MONGO_BACKUPS_KEY
              value: "{{ .Values.S3.mongoBackups }}"

            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: endpoint
                  name: openstad-s3
            - name: S3_KEY
              valueFrom:
                secretKeyRef:
                  key: key
                  name: openstad-s3

            - name: S3_SECRET
              valueFrom:
                secretKeyRef:
                  key: secret
                  name: openstad-s3

            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  key: bucket
                  name: openstad-s3

            - name: MONGO_DB_HOST
              valueFrom:
                secretKeyRef:
                  key: hostname
                  name: openstad-mongo-credentials

            - name: DEFAULT_DB
              valueFrom:
                secretKeyRef:
                  key: database
                  name: openstad-mongo-credentials

            - name: API_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: openstad-db-credentials

            - name: API_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: mysql-secret
            - name: API_DATABASE_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database
                  name: openstad-api-db
            - name: API_DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  key: hostname
                  name: openstad-db-credentials
            - name: API_EMAILADDRESS
              value: {{ .Values.api.emailAddress }}
            - name: API_EXPRESS_PORT
              value: {{ .Values.api.service.httpPort | quote }}
            - name: AUTH_API_URL
              value: https://{{ template "openstad.auth.url" . }}

            - name: API_MAIL_FROM
              value: "{{ .Values.secrets.mail.api.emailFrom }}"

            - name: API_MAIL_TRANSPORT_SMTP_PORT
              value: "{{ .Values.secrets.mail.api.port }}"

            - name: API_MAIL_TRANSPORT_SMTP_HOST
              value: "{{ .Values.secrets.mail.api.host }}"

            - name: API_MAIL_TRANSPORT_SMTP_REQUIRESSL
              value: "yes"

            - name: API_MAIL_TRANSPORT_SMTP_AUTH_USER
              value: "{{ .Values.secrets.mail.api.user }}"

            - name: API_MAIL_TRANSPORT_SMTP_AUTH_PASS
              value: "{{ .Values.secrets.mail.api.password }}"

            - name: API_NOTIFICATIONS_ADMIN_EMAILADDRESS
              value: "{{ .Values.secrets.mail.api.adminEmailFrom }}"

            - name: API_SECURITY_SESSIONS_COOKIENAME
              valueFrom:
                secretKeyRef:
                  key: cookie_name
                  name: openstad-cookies
            - name: API_SECURITY_SESSIONS_ONLYSECURE
              valueFrom:
                secretKeyRef:
                  key: only_secure
                  name: openstad-cookies
            - name: API_AUTHORIZATION_JWTSECRET
              valueFrom:
                secretKeyRef:
                  key: jwt_secret
                  name: openstad-cookies
            - name: AUTH_FIXED_TOKEN
              valueFrom:
                secretKeyRef:
                  key: fixed_token
                  name: openstad-auth-credentials
            - name: AUTH_FIXED_USER_ID
              value: "{{ .Values.api.fixedUserId }}"

            - name: API_AUTHORIZATION_FIXEDAUTHTOKENS
              value: "[{ \"token\": \"$(AUTH_FIXED_TOKEN)\", \"userId\": \"$(AUTH_FIXED_USER_ID)\" }]"


            - name: AUTH_FIRST_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: client_id
                  name: openstad-auth-credentials

            - name: AUTH_FIRST_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: client_secret
                  name: openstad-auth-credentials

            - name: AUTH_URL
              value: https://{{ template "openstad.auth.url" . }}
            # auth internal url is used for call internally to localhost or the corresponding service name in a container environment
            # it can also  go through the public network
            # but there is a performace cost if this is not done internally due to network latency
            #
            - name: AUTH_INTERNAL_SERVER_URL
              value: https://{{ template "openstad.auth.url" . }}

            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP

      initContainers:
        - name: post-install-check-database-up
          image: {{ .Values.api.deploymentContainer.image }}
          imagePullPolicy: Always
          command: ["nc", "{{.Release.Name}}-mysql", "3306", "-z", "-w1"]
{{- end }}
